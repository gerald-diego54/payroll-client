import { EnumTabs } from "@/types/tabs.d";
import { NextPage } from "next";
import CustomTable from "@/src/components/form_modals/Tables";
import CustomTabs from "@/src/components/form_modals/CustomTabs";
import DashboardIcon from "@mui/icons-material/Dashboard";
import Head from "next/head";
import React, { memo } from "react";
import Sidebar from "@/src/layout/Sidebar";
import {
    Box,
    Button,
    Checkbox,
    CssBaseline,
    Divider,
    Modal,
    Paper,
    SelectChangeEvent,
    Stack,
    styled,
    TableCell,
    TableRow,
    Typography,
} from "@mui/material";
import DTRForm from "@/src/components/form_modals/DTRForm";
import Employee from "@/src/components/dashboard/Employee";
import OTForm from "@/src/components/form_modals/OTForm";
import LeaveForm from "@/src/components/form_modals/LeaveForm";
import moment from "moment";
import { connection } from "@/src/environment/connection";

const EmployeePage: NextPage = (): JSX.Element => {
    const [tabName, setTabName] = React.useState<EnumTabs>(EnumTabs.TAB_ONE);
    const [openModal, setOpenModal] = React.useState(false);
    const [user, setUser] = React.useState(null);

    const test_data_tab_one: any[] = [
        {
            number: 87362813,
            year: moment().format("YYYY"),
            date: "REGULAR WORKS",
            in: moment().format("LT"),
            out: moment().format("LT"),
        },
    ];

    const test_data_tab_two: any[] = [
        {
            number: 87362813,
            year: moment().format("YYYY"),
            date: moment().format("L"),
            hours: 3,
            approved: false,
            remarks: "-",
        },
    ];

    const getUser = async () => {
        const response = await connection.get("user/" + window.localStorage.getItem("user_id"));
        setUser(response.data.data);
    };

    React.useEffect(() => {
        getUser();
    }, []);

    return (
        <Box>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Box
                sx={{
                    backgroundColor: "#5B848D",
                    width: "100%",
                    height: "100vh",
                    display: "flex",
                    flexDirection: "row",
                }}
            >
                <CssBaseline />
                {EnumTabs.TAB_ONE === tabName && (
                    <Modal
                        sx={{ margin: "auto", width: "fit-content", height: "fit-content" }}
                        open={openModal}
                        onClose={() => null}
                    >
                        <Box sx={{ backgroundColor: "#5B848D", width: "fit-content" }}>
                            <DTRForm onCloseModal={(status) => setOpenModal(status)} />
                        </Box>
                    </Modal>
                )}
                {EnumTabs.TAB_TWO === tabName && (
                    <Modal
                        sx={{ margin: "auto", width: "fit-content", height: "fit-content" }}
                        open={openModal}
                        onClose={() => null}
                    >
                        <Box sx={{ backgroundColor: "#5B848D", width: "fit-content" }}>
                            <OTForm onCloseModal={(status) => setOpenModal(status)} />
                        </Box>
                    </Modal>
                )}
                {EnumTabs.TAB_THREE === tabName && (
                    <Modal
                        sx={{ margin: "auto", width: "fit-content", height: "fit-content" }}
                        open={openModal}
                        onClose={() => null}
                    >
                        <Box sx={{ backgroundColor: "#044453", padding: "10px", width: "fit-content" }}>
                            <LeaveForm />
                            <Paper elevation={0} sx={{ padding: "0 1rem", backgroundColor: "transparent" }}>
                                <Stack direction="row-reverse" gap={2} my={2}>
                                    <Button
                                        onClick={() => setOpenModal((open) => !open)}
                                        color="error"
                                        variant="contained"
                                    >
                                        Close
                                    </Button>
                                    <Button color="success" variant="contained">
                                        Save
                                    </Button>
                                </Stack>
                            </Paper>
                        </Box>
                    </Modal>
                )}
                <Sidebar />
                <Box sx={{ width: "100%" }}>
                    <Paper
                        sx={{
                            backgroundColor: "#ffffff",
                            padding: "7px 10px",
                            display: "flex",
                            flexDirection: "row",
                            gap: 1,
                            border: "none",
                        }}
                        elevation={3}
                        square
                    >
                        <DashboardIcon sx={{ color: "#044453", margin: "auto 0", fontSize: 35 }} />
                        <Typography color="#044453" variant="h6" fontWeight={600} my="auto">
                            Employee
                        </Typography>
                    </Paper>
                    <Paper
                        elevation={3}
                        sx={{
                            backgroundColor: "#044453",
                            padding: "15px 0 15px 15px",
                            width: "95%",
                            marginX: "auto",
                            marginY: 3,
                            marginBottom: 2.5,
                        }}
                    >
                        <Employee data={user} />
                    </Paper>
                    <Paper
                        elevation={3}
                        sx={{
                            backgroundColor: "#044453",
                            padding: 2.5,
                            width: "95%",
                            marginX: "auto",
                            marginY: 3,
                            marginBottom: 2.5,
                        }}
                    >
                        <CustomTabs onTabChange={(tab) => setTabName(tab)} tabName={tabName} />
                        <Divider sx={{ borderColor: "#ffffff" }} />
                        {tabName === EnumTabs.TAB_ONE && (
                            <Box>
                                <Button
                                    variant="contained"
                                    color="success"
                                    onClick={() => setOpenModal((open) => !open)}
                                    sx={{ float: "right", margin: "10px 0" }}
                                >
                                    Add
                                </Button>
                                <CustomTable label={["Edit", "Delete", "Number", "Year", "Date", "In", "Out"]}>
                                    {test_data_tab_one.map((value, index) => (
                                        <TableRow key={index}>
                                            <TableCell>
                                                <Button variant="contained" color="success" size="small" fullWidth>
                                                    Edit
                                                </Button>
                                            </TableCell>
                                            <TableCell>
                                                <Button variant="contained" color="error" size="small" fullWidth>
                                                    Delete
                                                </Button>
                                            </TableCell>

                                            <TableCell>{value.number}</TableCell>
                                            <TableCell>{value.year}</TableCell>
                                            <TableCell>{value.date}</TableCell>
                                            <TableCell>{value.in}</TableCell>
                                            <TableCell>{value.out}</TableCell>
                                        </TableRow>
                                    ))}
                                </CustomTable>
                            </Box>
                        )}
                        {tabName === EnumTabs.TAB_TWO && (
                            <Box>
                                <Button
                                    variant="contained"
                                    color="success"
                                    onClick={() => setOpenModal((open) => !open)}
                                    sx={{ float: "right", margin: "10px 0" }}
                                >
                                    Add
                                </Button>
                                <CustomTable
                                    label={["Edit", "Delete", "Number", "Year", "Date", "Hours", "Approved", "Remarks"]}
                                >
                                    {test_data_tab_two.map((value, index) => (
                                        <TableRow key={index}>
                                            <TableCell>
                                                <Button variant="contained" color="success" size="small" fullWidth>
                                                    Edit
                                                </Button>
                                            </TableCell>
                                            <TableCell>
                                                <Button variant="contained" color="error" size="small" fullWidth>
                                                    Delete
                                                </Button>
                                            </TableCell>

                                            <TableCell>{value.number}</TableCell>
                                            <TableCell>{value.year}</TableCell>
                                            <TableCell>{value.date}</TableCell>
                                            <TableCell>{value.hours}</TableCell>
                                            <TableCell>
                                                <Checkbox readOnly checked={true} />
                                            </TableCell>
                                            <TableCell align="center">{value.remarks}</TableCell>
                                        </TableRow>
                                    ))}
                                </CustomTable>
                            </Box>
                        )}
                        {tabName === EnumTabs.TAB_THREE && (
                            <Box>
                                <Button
                                    variant="contained"
                                    color="success"
                                    onClick={() => setOpenModal((open) => !open)}
                                    sx={{ float: "right", margin: "10px 0" }}
                                >
                                    Add
                                </Button>
                                <CustomTable
                                    label={[
                                        "Edit",
                                        "Delete",
                                        "Number",
                                        "Year",
                                        "Date",
                                        "Leave Type",
                                        "Half Day",
                                        "With Pay",
                                        "Approved",
                                        "Remarks",
                                    ]}
                                >
                                    {/* {test_data_tab_two.map((value, index) => (
                                        <TableRow
                                            key={index}
                                            sx={{ "&:last-child td, &:last-child th": { border: 0 } }}
                                        >
                                            <TableCell component="th" scope="row" align="center">
                                                <Button variant="contained" color="success" size="small">
                                                    Edit
                                                </Button>
                                            </TableCell>
                                            <TableCell align="center">
                                                <Button variant="contained" color="error" size="small">
                                                    Delete
                                                </Button>
                                            </TableCell>

                                            <TableCell align="center">{value.number}</TableCell>
                                            <TableCell align="center">{value.year}</TableCell>
                                            <TableCell align="center">{value.date}</TableCell>
                                            <TableCell align="center">{value.hours}</TableCell>
                                            <TableCell align="center">
                                                <Checkbox />
                                            </TableCell>
                                            <TableCell align="center">{value.remarks}</TableCell>
                                        </TableRow>
                                    ))} */}
                                </CustomTable>
                            </Box>
                        )}
                        {tabName === EnumTabs.TAB_FOUR && (
                            <Box>
                                <CustomTable label={["View", "Pay ID", "Date", "Year", "Remarks", "Approved By"]}>
                                    {/* {test_data_tab_two.map((value, index) => (
                                        <TableRow
                                            key={index}
                                            sx={{ "&:last-child td, &:last-child th": { border: 0 } }}
                                        >
                                            <TableCell component="th" scope="row" align="center">
                                                <Button variant="contained" color="success" size="small">
                                                    Edit
                                                </Button>
                                            </TableCell>
                                            <TableCell align="center">
                                                <Button variant="contained" color="error" size="small">
                                                    Delete
                                                </Button>
                                            </TableCell>

                                            <TableCell align="center">{value.number}</TableCell>
                                            <TableCell align="center">{value.year}</TableCell>
                                            <TableCell align="center">{value.date}</TableCell>
                                            <TableCell align="center">{value.hours}</TableCell>
                                            <TableCell align="center">
                                                <Checkbox />
                                            </TableCell>
                                            <TableCell align="center">{value.remarks}</TableCell>
                                        </TableRow>
                                    ))} */}
                                </CustomTable>
                            </Box>
                        )}
                        {tabName === EnumTabs.TAB_FIVE && (
                            <Box>
                                <CustomTable
                                    label={[
                                        "View",
                                        "DTR ID",
                                        "Year",
                                        "Date Start",
                                        "Date Ended",
                                        "Remarks",
                                        "Approve By",
                                    ]}
                                >
                                    {/* {test_data_tab_two.map((value, index) => (
                                        <TableRow
                                            key={index}
                                            sx={{ "&:last-child td, &:last-child th": { border: 0 } }}
                                        >
                                            <TableCell component="th" scope="row" align="center">
                                                <Button variant="contained" color="success" size="small">
                                                    Edit
                                                </Button>
                                            </TableCell>
                                            <TableCell align="center">
                                                <Button variant="contained" color="error" size="small">
                                                    Delete
                                                </Button>
                                            </TableCell>

                                            <TableCell align="center">{value.number}</TableCell>
                                            <TableCell align="center">{value.year}</TableCell>
                                            <TableCell align="center">{value.date}</TableCell>
                                            <TableCell align="center">{value.hours}</TableCell>
                                            <TableCell align="center">
                                                <Checkbox />
                                            </TableCell>
                                            <TableCell align="center">{value.remarks}</TableCell>
                                        </TableRow>
                                    ))} */}
                                </CustomTable>
                            </Box>
                        )}
                    </Paper>
                </Box>
            </Box>
        </Box>
    );
};

export default memo(EmployeePage);
